Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"

  # Network Configuration
  config.vm.hostname = "pg-node-1"
  config.vm.network "private_network", ip: "192.168.50.11"
  # Configure host names
  config.vm.provision "shell", inline: "echo '192.168.50.11 pg-node-1' >> /etc/hosts"
  config.vm.provision "shell", inline: "echo '192.168.50.12 pg-node-2' >> /etc/hosts"
  config.vm.provision "shell", inline: "echo '192.168.50.13 pg-node-3' >> /etc/hosts"
  config.vm.provision "shell", inline: "echo '192.168.50.14 pg-node-4' >> /etc/hosts"
  config.vm.provision "shell", inline: "echo '192.168.50.15 pg-node-5' >> /etc/hosts"
  config.vm.provision "shell", inline: 'echo -e "# $(cat /etc/hosts)" > /etc/hosts'

  # Directories
  config.vm.synced_folder "../scripts", "/scripts"
  config.vm.synced_folder "../config", "/config"

  # Basic Programs Installation
  config.vm.provision "shell", inline: "apt-get update --fix-missing -y; apt-get upgrade -y; apt-get dist-upgrade -y;"
  config.vm.provision "shell", inline: "apt-get install emacs tmux htop mc iftop bmon -y"
  config.vm.provision "shell", inline: "apt-get install python3-dev build-essential -y"

  # PostGreSQL 10 Installation
  config.vm.provision "shell", inline: "echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
  config.vm.provision "shell", inline: "apt-get install wget ca-certificates"
  config.vm.provision "shell", inline: "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -"
  config.vm.provision "shell", inline: "apt-get update; apt-get upgrade -y"
  config.vm.provision "shell", inline: "apt-get install postgresql-10 -y"

  # Install & Configure Zookeeper
  config.vm.provision "shell", inline: "apt-get install zookeeperd -y"
  config.vm.provision "shell", inline: "echo 'server.1=pg-node-1:2888:3888' >> /etc/zookeeper/conf/zoo.cfg"
  config.vm.provision "shell", inline: "echo 'server.2=pg-node-2:2888:3888' >> /etc/zookeeper/conf/zoo.cfg"
  config.vm.provision "shell", inline: "echo 'server.3=pg-node-3:2888:3888' >> /etc/zookeeper/conf/zoo.cfg"
  config.vm.provision "shell", inline: "echo 'server.4=pg-node-4:2888:3888' >> /etc/zookeeper/conf/zoo.cfg"
  config.vm.provision "shell", inline: "echo 'server.5=pg-node-5:2888:3888' >> /etc/zookeeper/conf/zoo.cfg"
  config.vm.provision "shell", inline: "echo '1' > /var/lib/zookeeper/myid"
  config.vm.provision "shell", inline: "service zookeeper restart"

  # Install Tooz
  config.vm.provision "shell", inline: "curl https://bootstrap.pypa.io/get-pip.py | python3 -"
  config.vm.provision "shell", inline: "pip3 install tooz kazoo arrow click psycopg2"

  # Configure Postgres
  ## Allow access for remote users
  config.vm.provision "shell", inline: "sed -i 's#127\.0\.0\.1/32            md5#0.0.0.0/0               trust#' /etc/postgresql/10/main/pg_hba.conf"
  config.vm.provision "shell", inline: "sed -i 's#\:\:1/128#\:\:/0   #' /etc/postgresql/10/main/pg_hba.conf"
  config.vm.provision "shell", inline: "service postgresql restart"
  ## Create DB and Tables
  config.vm.provision "shell", inline: "sudo -u postgres createdb testdb"
  config.vm.provision "shell", inline: "sudo -u postgres psql < /scripts/create_user.sql"
  config.vm.provision "shell", inline: "sudo -u postgres psql -d testdb -U vagrant -h 127.0.0.1 < /scripts/setup.sql"
  ## Restart the server
  config.vm.provision "shell", inline: "service postgresql restart"
end
